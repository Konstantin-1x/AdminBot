package org.example;

import org.example.dao.PeopleDAO;
import org.example.dao.TariffDAO;
import org.example.session.TariffCreationSession;
import org.example.table.People;
import org.example.table.Tariff;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;


import java.math.BigDecimal;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

public class MessageProcessing {
    Map<Long, String> waitingForInput = new HashMap<>();
    Map<Long, TariffCreationSession> newTariffs = new HashMap<>();

    void handleUpdate(Update update) throws TelegramApiException {
        CreateTelegramBot createTelegramBot = new CreateTelegramBot();
        if(update.hasMessage() && update.getMessage().hasText()){
            String msg = update.getMessage().getText();
            long chatId = update.getMessage().getChatId();
            String state = waitingForInput.get(chatId);
            TariffCreationSession session = newTariffs.get(chatId);
            if(state!= null && !msg.equals("back")){
                if(state.startsWith("awaiting_nameTariff_for")){
                    int tariffId = Integer.parseInt(state.split(":")[1]);
                    String newName = update.getMessage().getText();

                    new TariffDAO().updateNameById(tariffId, newName);
                    waitingForInput.remove(chatId);

                    createTelegramBot.sendMessage(chatId, null,"‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞: " + newName);
                    Tariff tariff = new TariffDAO().findById(tariffId);
                    createTelegramBot.sentOneTariff(chatId,tariff);
                    return;
                }
                if(state.startsWith("awaiting_descriptionTariff_for")){
                    int tariffId = Integer.parseInt(state.split(":")[1]);
                    String newName = update.getMessage().getText();

                    new TariffDAO().updateDescriptionById(tariffId, newName);
                    waitingForInput.remove(chatId);

                    createTelegramBot.sendMessage(chatId, null,"‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞: " + newName);
                    Tariff tariff = new TariffDAO().findById(tariffId);
                    createTelegramBot.sentOneTariff(chatId,tariff);
                    return;
                }
                if(state.startsWith("awaiting_priceTariff_for")){
                    int tariffId = Integer.parseInt(state.split(":")[1]);
                    String newName = update.getMessage().getText().replace(",", ".");;

                    try {
                        BigDecimal newPrice = new BigDecimal(newName);
                        new TariffDAO().updatePriceById(tariffId, newPrice);

                        waitingForInput.remove(chatId);
                        createTelegramBot.sendMessage(chatId, null, "‚úÖ –¶–µ–Ω–∞ —Ç–∞—Ä–∏—Ñ–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞: " + newPrice + " ‚ÇΩ");
                        Tariff tariff = new TariffDAO().findById(tariffId);
                        createTelegramBot.sentOneTariff(chatId,tariff);

                    } catch (NumberFormatException e) {
                        createTelegramBot.sendMessage(chatId, null, "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ü–µ–Ω—É (–Ω–∞–ø—Ä–∏–º–µ—Ä: 199.99).");
                    }
                    return;
                }
                if(state.startsWith("awaiting_termTariff_for")){
                    int tariffId = Integer.parseInt(state.split(":")[1]);
                    String newName = update.getMessage().getText();

                    try {
                        int newTerm = Integer.parseInt(newName);
                        new TariffDAO().updateTermById(tariffId, newTerm);
                        Tariff tariff = new TariffDAO().findById(tariffId);

                        waitingForInput.remove(chatId);
                        createTelegramBot.sendMessage(chatId, null, "‚úÖ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç–∞—Ä–∏—Ñ–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞: " + newTerm + " —Å—É—Ç–æ–∫");
                        createTelegramBot.sentOneTariff(chatId,tariff);

                    } catch (NumberFormatException e) {
                        createTelegramBot.sendMessage(chatId, null, "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä: 14).");
                    }
                    return;
                }
                if(state.startsWith("awaiting_discountTariff_for")){
                    int tariffId = Integer.parseInt(state.split(":")[1]);
                    String newName = update.getMessage().getText().replace(",",".");

                    try {
                        BigDecimal newDiscount = new BigDecimal(newName);
                        new TariffDAO().updateDiscountById(tariffId, newDiscount);
                        waitingForInput.remove(chatId);
                        createTelegramBot.sendMessage(chatId, null, "‚úÖ –°–∫–∏–¥–∫–∞ —Ç–∞—Ä–∏—Ñ–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞: " + newDiscount + "%");
                        Tariff tariff = new TariffDAO().findById(tariffId);
                        createTelegramBot.sentOneTariff(chatId,tariff);

                    } catch (NumberFormatException e) {
                        createTelegramBot.sendMessage(chatId, null, "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å–∫–∏–¥–∫—É (–Ω–∞–ø—Ä–∏–º–µ—Ä: 15.2).");
                    }
                    return;
                }
                if(state.startsWith("addAdmin_")){
                    PeopleDAO peopleDAO = new PeopleDAO();
                    String find = msg.replace("@","");
                    People people = peopleDAO.findByUsername(find);
                    if(people!=null){
                        if(people.getTgId() == chatId || Objects.equals(people.getUsername(), "mqweco") || Objects.equals(people.getUsername(), "RESTx")){
                            createTelegramBot.sendMessage(chatId,null,"–¢—ã –¥–µ–±–∏–ª?");
                        }else {
                            if(!people.isAdmin()){
                                peopleDAO.updateAdminByTgId(people.getTgId(),true);
                                createTelegramBot.sendMessage(chatId,null,"–ê–¥–º–∏–Ω –¥–æ–±–∞–≤–ª–µ–Ω");
                                createTelegramBot.sendMessage(people.getTgId(),null,"–í—ã –Ω–æ–≤—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä");
                            }else {
                                peopleDAO.updateAdminByTgId(people.getTgId(),false);
                                createTelegramBot.sendMessage(chatId,null,"–ê–¥–º–∏–Ω —É–¥–∞–ª–µ–Ω");
                                createTelegramBot.sendMessage(people.getTgId(),null,"–í—ã —Ä–∞–∑–∂–∞–ª–æ–≤–∞–Ω—ã");
                            }
                        }

                    }else {
                        createTelegramBot.sendMessage(chatId,null,"–ß–µ–ª–æ–≤–µ–∫–∞ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –≤ –ë–î –Ω–µ –Ω–∞–π–¥–µ–Ω–æ");
                    }
                    waitingForInput.remove(chatId);
                    return;
                }
            }

            if(session!=null){
                Tariff tariff = session.getTariff();
                switch (session.getStep()){
                    case NAME -> {
                        tariff.setName(msg);
                        session.setStep(TariffCreationSession.Step.DESCRIPTION);
                        createTelegramBot.sendMessage(chatId,null,"–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ");
                    }
                    case DESCRIPTION -> {
                        tariff.setDescription(msg);
                        session.setStep(TariffCreationSession.Step.PRICE);
                        createTelegramBot.sendMessage(chatId, null, "üí∞ –í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, 499.99):");
                    }
                    case PRICE -> {
                        try {
                            BigDecimal price = new BigDecimal(msg.replace(",", "."));
                            tariff.setPrice(price);
                            session.setStep(TariffCreationSession.Step.TERM);
                            createTelegramBot.sendMessage(chatId, null, "üìÜ –í–≤–µ–¥–∏—Ç–µ —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è (–≤ —Å—É—Ç–∫–∞—Ö):");
                        } catch (NumberFormatException e) {
                            createTelegramBot.sendMessage(chatId, null, "‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ü–µ–Ω—É, –Ω–∞–ø—Ä–∏–º–µ—Ä: 399.99");
                        }
                    }
                    case TERM -> {
                        try {
                            int term = Integer.parseInt(msg);
                            tariff.setTerm(term);
                            session.setStep(TariffCreationSession.Step.DISCOUNT);
                            createTelegramBot.sendMessage(chatId, null, "üéÅ –í–≤–µ–¥–∏—Ç–µ —Å–∫–∏–¥–∫—É (–≤ —Ä—É–±–ª—è—Ö, –º–æ–∂–Ω–æ 0):");
                        } catch (NumberFormatException e) {
                            createTelegramBot.sendMessage(chatId, null, "‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 7)");
                        }
                    }
                    case DISCOUNT -> {
                        try {
                            TariffDAO tariffDao = new TariffDAO();
                            BigDecimal discount = new BigDecimal(msg.replace(",", "."));
                            tariff.setDiscount(discount);
                            session.setStep(TariffCreationSession.Step.CONFIRM);
                            // —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∞—Ä–∏—Ñ
                            tariff.setId(tariffDao.getNextId());
                            new TariffDAO().save(tariff);
                            createTelegramBot.sendMessage(chatId, null, "‚úÖ –¢–∞—Ä–∏—Ñ —Å–æ–∑–¥–∞–Ω!\n\n" +
                                    "üì¶ –ù–∞–∑–≤–∞–Ω–∏–µ: " + tariff.getName() + "\n" +
                                    "üí¨ –û–ø–∏—Å–∞–Ω–∏–µ: " + tariff.getDescription() + "\n" +
                                    "üí∞ –¶–µ–Ω–∞: " + tariff.getPrice() + " ‚ÇΩ\n" +
                                    "üìÜ –°—Ä–æ–∫: " + tariff.getTerm() + " —Å—É—Ç–æ–∫\n" +
                                    "üéÅ –°–∫–∏–¥–∫–∞: " + tariff.getDiscount() + " ‚ÇΩ\n" +
                                    "üëÅ –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è: ‚ùå");
                            newTariffs.remove(chatId);
                        } catch (NumberFormatException e) {
                            createTelegramBot.sendMessage(chatId, null, "‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å–∫–∏–¥–∫—É (–Ω–∞–ø—Ä–∏–º–µ—Ä: 50.00)");
                        }
                    }
                }
                return;
            }

            switch (msg) {
                case "/start" -> createTelegramBot.sendStart(chatId,update);
                case "–ü–æ–¥–ø–∏—Å–∫–∏" -> createTelegramBot.sendSubscription(chatId);
                case "–ú–µ–Ω—é" -> createTelegramBot.sendMenu(chatId);
                case "–¢–∞—Ä–∏—Ñ—ã" -> createTelegramBot.sendTariff(chatId);
                case "–û—Ç–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É","–í–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É" -> {
                    PeopleDAO peopleDAO = new PeopleDAO();
                    People people = peopleDAO.findById(chatId);
                    boolean checkMarketing = people.isMarketing();
                    peopleDAO.updateMarketingByTgId(chatId,!checkMarketing);
                    if(checkMarketing){
                        createTelegramBot.sendMessage(chatId,0,"–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞");
                    }else {
                        createTelegramBot.sendMessage(chatId,0,"–†–∞—Å—Å—ã–ª–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞");
                    }
                    createTelegramBot.sendMenu(chatId);
                }

                case "–ê–¥–º–∏–Ω –º–µ–Ω—é" -> createTelegramBot.sendAdminMenu(chatId);
                case "–ò–∑–º–µ–Ω–∏—Ç—å —Ç–∞—Ä–∏—Ñ—ã" -> {
                    Admin admin = new Admin();
                    if(admin.isAdmin(chatId)){
                        createTelegramBot.sendTariff(chatId);
                    }else {
                        createTelegramBot.sendMenu(chatId);
                    }
                }
                case "–ê–¥–º–∏–Ω","–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å" ->{
                    PeopleDAO peopleDAO = new PeopleDAO();
                    People people = peopleDAO.findById(chatId);
                    if(people.isAdmin()){
                        peopleDAO.updateUserByTgId(chatId,!people.isUser_flag());
                        createTelegramBot.sendAdminMenu(chatId);
                    }else {
                        createTelegramBot.sendMenu(chatId);
                    }
                }

                case "–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞" ->{
                    PeopleDAO peopleDAO = new PeopleDAO();
                    People people = peopleDAO.findById(chatId);
                    if(people.isAdmin()){
                        waitingForInput.put(chatId, "addAdmin_");
                        createTelegramBot.sendMessage(chatId,null,"–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–≥ (–ù–∞–ø—Ä–∏–º–µ—Ä @qwerty123)");
                    }
                   else {
                        createTelegramBot.sendMenu(chatId);
                    }
                }

                default -> {
                    createTelegramBot.sendMenu(chatId);
                }

            }
        }
        if (update.hasCallbackQuery()) {
            String data = update.getCallbackQuery().getData();
            Long chatId = update.getCallbackQuery().getMessage().getChatId();
            if(data.startsWith("tariff_")){
                TariffDAO tariffDAO = new TariffDAO();
                int tariffId = Integer.parseInt(data.substring("tariff_".length()));
                Tariff selected = tariffDAO.findById(tariffId);
                createTelegramBot.sentOneTariff(chatId,selected);
            } else if (data.startsWith("update_tariffs_name_")) {
                int tariffId = Integer.parseInt(data.substring("update_tariffs_name_".length()));

                waitingForInput.put(chatId,"awaiting_nameTariff_for:"+tariffId);
                createTelegramBot.sendMessage(chatId,null,"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è –¥–ª—è —Ç–∞—Ä–∏—Ñ–∞");
            } else if (data.startsWith("update_tariffs_description_")){
                int tariffId = Integer.parseInt(data.substring("update_tariffs_description_".length()));

                waitingForInput.put(chatId,"awaiting_descriptionTariff_for:"+tariffId);
                createTelegramBot.sendMessage(chatId,null,"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Ç–∞—Ä–∏—Ñ–∞");
            } else if (data.startsWith("update_tariffs_price_")) {
                int tariffId = Integer.parseInt(data.substring("update_tariffs_price_".length()));

                waitingForInput.put(chatId,"awaiting_priceTariff_for:"+tariffId);
                createTelegramBot.sendMessage(chatId,null,"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Ü–µ–Ω—É –¥–ª—è —Ç–∞—Ä–∏—Ñ–∞");
            }else if (data.startsWith("update_tariffs_term_")) {
                int tariffId = Integer.parseInt(data.substring("update_tariffs_term_".length()));

                waitingForInput.put(chatId,"awaiting_termTariff_for:"+tariffId);
                createTelegramBot.sendMessage(chatId,null,"–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç–∞—Ä–∏—Ñ–∞");
            }else if (data.startsWith("update_tariffs_discount_")) {
                int tariffId = Integer.parseInt(data.substring("update_tariffs_discount_".length()));

                waitingForInput.put(chatId,"awaiting_discountTariff_for:"+tariffId);
                createTelegramBot.sendMessage(chatId,null,"–í–≤–µ–¥–∏—Ç–µ —Å–∫–∏–¥–∫—É —Ç–∞—Ä–∏—Ñ–∞");
            }else if (data.startsWith("changeVisible_")) {
                int tariffId = Integer.parseInt(data.substring("changeVisible_".length()));
                TariffDAO tariffDAO = new TariffDAO();
                Tariff tariff = tariffDAO.findById(tariffId);
                boolean visible = tariff.isVisible();
                tariffDAO.updateVisibleById(tariffId,!visible);
                if(visible){
                    createTelegramBot.sendMessage(chatId,null,"–¢–∞—Ä–∏—Ñ —Ç–µ–ø–µ—Ä—å –Ω–µ–≤–∏–¥–∏–º");
                }else {
                    createTelegramBot.sendMessage(chatId,null,"–¢–∞—Ä–∏—Ñ —Ç–µ–ø–µ—Ä—å –≤–∏–¥–∏–º");
                }

            }

            switch (data) {
                case "–ü–æ–¥–ø–∏—Å–∫–∏" -> createTelegramBot.sendSubscription(chatId);
                case "tariffs" -> createTelegramBot.sendTariff(chatId);
                case "addTariff_" -> createTariff(chatId);
                default -> {
                }
            }
        }
    }

    public void createTariff(long chatId){
        CreateTelegramBot createTelegramBot = new CreateTelegramBot();
        TariffCreationSession tariffCreationSession = new TariffCreationSession();
        Tariff tariff = new Tariff();
        tariff.setVisible(false);
        tariffCreationSession.setStep(TariffCreationSession.Step.NAME);
        tariffCreationSession.setTariff(tariff);
        newTariffs.put(chatId,tariffCreationSession);

        createTelegramBot.sendMessage(chatId,null,"–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞");
    }
}